t1.c : zerlegung aller inneren produkte von schurfunktionen zu gegebenen
       grad. 
       eingabe: INTEGER

t2.c : einlesen eines beliebigen objects, abspeichern, wieder vom file
       lesen, dann ausgeben

t3.c : wie t1.c aber unter verwendung von m_part_sc_tafel statt m_part_sc
       und mit vorheriger berechnung der charactertafel

t4.c : innere product zweier schurfunktionen, und dann q -spezialisierung
       nach der zerlegung des products muss die laenge des alphabets angegeben
       werden

t5.c : eingabe einer permutation w dann des grades n ,berechnet alle produkte
       des schubertprolynoms X_w mit allen schubertpolynomen zu permutationen
       vom grad n 

t6.c : kranztafel, eingabe zwei INTEGER

t7.c : Eingabe zwei lehmercodes, ausgabe produkt der schubertpolynome mit
       lehmercode

t8.c : eingabe lehmercode, ausgabe ergebnis von newtrans

t9.c : eingabe integer, berechnung chartafel, inverse chartafel, multiplikation
       der ergebnise.

t10.c : ein fehlerhaftes programm von tpd. eingabefiles sind data1.tpd und
       data2.tpd

t11.c : Eingabe Skewpartition und laenge des Alphabets, berechnung der 
       Schiefschurfunktion

t12.c : Eingabe Permutation es werden alle red.dec. die tableaux sind
       berechnet, dann werden die umrisse mit dem ergebnis von
       newtrans verglichen.

t13.c : eingabe grad einer s_n, und ein lehmerode einer permutation,
       berechnung des produkts von 100 zufaelligen schubertpolynomen
       des eingegebenen grades und des schubertpolynoms zum eingegeben
       lehmercode, ausgabe als lehmercode liste.

t14.c : Eingabe schiefpartition  s und Partition p , ausgabe der
	tableaux mit umriss s und inhalt p

t15.c : Eingabe integer, ausgabe alle permutation, die nicht 
        vexillary und die zugehoerigen tableaux, die reduced dec.
        sind.

t16.c : inneres tensorproduct von zwei rechtecken, vielfachheit der
	rechtecke in der zerlegung (clausen)

t17.c : innere tensorprodukte von beliebigen rechtecken, darin die
	vielfachheiten von rechtecken

t18.c : kostkatafel berechnen und abspeichern

t19.c : eingabe zwei vectoren ( stuetzpunkte und werte ) ausgabe das
        lagrange polynom

t20.c : determinante von schubertpolynomen, eingabe der codes

t21.c : chern_falg: totale chernklasse

t22.c : determinant of schurpolynomial input: t22.in

t23.c : determinant of schurpolynomial input multiply by diagonal matrix
        input t23.in

t24.c : pletysm von 2 complete symm func und nur die rechtecke ausgeben

t25.c : chern klass with polynomials (former schubert)

t26.c : determinant of complete sym functions with binomial koeff

t27.c : produkts of (1 + x_j - x_i) as schubertpolynomials: eingabe t27.in

t28.c : produkt (1+a) (1+a+b) (1+a+b+c) ... as schubertpolynomial

t29.c : projektive degree of schubert (Y_1 + Y_01 ... + Y_0..01)^k

t30.c : change monomial - elementary and inverse

t31.c : start permutation and all tableaux for the following non vex 
        one

t32.c : jeu de taquin enter skew tableau

t33.c : inverses polynom labeld by permutation as schubert poly

t34.c : enter degree schubertpolynomials in tex

t35.c : produkts of (x_i - x_j)

t36.c : produkte (1 + (x_i - x_j) + ... +(x_i -x_j)^k) 
        output in lehmercode restricted to given degree of s_n

t37.c : change of basis invers pol -- schubert pol

t38.c : group generated by permutations

t39.c : CYCLOTOMIC, produkt welches die fakultatet ergibt

t40.c : inverse matrix mit radikalen

t41.c : search for null-charakter

t42.c : enter schurpolynom and length of alphabet compute q-spec

t43.c : computation of representing matrix in natural representation 

t44.c : computation of representing matrix in modular representation 
	moddg

t45.c : enter sym character output sum of irred characters

t46.c : input two schur polynomials, multiply them

t47.c : input two partitions output charvale

t48.c : input partition output induced character in s_(n over 2)

t49.c : expansion of powersum

t50.c : zerlegung von reutenauer charakteren, input rectangle shape

t51.c : eingabe startpartition, liste alle nachfolgenden reutenauer charaktere

t52.c : testfile fuer ndg, enter a PARTITION, runs forever

t53.c : t_POLYNOM_MONOMIALS enter length of alphbet, decompose square of
        vandermonde

t54.c : speichern von leeren listen

t55.c : matrix of dominance relation eingabe: t55.in

t56.c : frobenius trafo fuer eine Spalte der Charaktertafel: eingabe spalten
      index=PARTITION, integer fuer laenge der laengsten Partition
	eingabe: t56.in

t57.c : permutationen with given number of inversions

t58.c : word --> weintraube --> word

t59.c : eingabe perm, ausgabe alle wt mit zugehoerigen tableau und q-gewicht

t60.c : eingabe part, length of alphabet, output zonal polynom

t61.c : enter VECTOR, compute T_I as sum of wt,sum of tab, polynom, transform
        polynom back to T_I

t62.c : enter WORD compute tableaux, which P-symbol in robinson/schensted

t63.c : enter INTEGER n, reduce the character 0,1,2,3, .. in S_n

t64.c : enter PARTITION n, build matrix of that degree, 
        compute and print immanente

t65.c : hilbert matrix invertieren  

t66.c : enter max degree of S_n, product of Schubert polynomials

t67.c : enter TABLEAUX for idempotent, apply to SCHUBERT

t68.c : det of characters

t69.c : computation of pi stops after 100 iterations

t70.c : alle spechtpolynome zu gegebenen Umriss

t71.c : berechnung der nat dg von Specht

t72.c : tableau und kontertableau zu weintraube


t74.c : berechnugn von schiefdarstellungen

t75.c : psoitiv definit fuer ein problem von Merris
        Lin and Multilin Algebra 29 1991 315-317

t76.c : testfile nr 1 for new nb.c 
t77.c : testfile nr 2 for new nb.c 

t78.c : structure constants

t79.c : list of structure constants

t82.c : character of GL(n,q) nach Morris Math Zeitschr 1963
        X^{label}_{class}(t)

t85.c : pleint.c Lascoux Thurnau Sommerschule 1991

t86.c : test von odg

t87.c : test von inner und outer plethysm durch vergleich gegen quadrat

t88.c : 0-1 Matrizen zu vorgegebener Zeilen und spalten summe

t89.c : schubert polynomial in shifted alphabet

t90.c : codes die unterhalb eines lehmercodes liegen.

t91.c : rank /unrank  2-elementig

t92.c : lasoux example

t93.c : lascoux second example shifted alphabet

t94.c : lascoux tagnme statistics

t95.c : hager beispiel polynomiale darstellung

t96.c : rank /unrank  2-tupel  mit neuer Polyasubstitution

t97.c : beispiel zu idmpotent und zentralprim

t98.c : naiver algorithmus gruppe zu erzeugen

t99.c : algorithmus gruppe zu erzeugen aus Produkten der Erzeuger

t100.c : dimino didaktisch

t101.c : stabilisator/ commutator / remove_equals

t102.c : orbit

t103.c : schreier-vek 

t104.c : complete_schur_plet FEHLER bei 345 mit Opitimzer

t105.c : mult MATRIX x VECTOR

t106.c : operate_perm_polynom / operate_perm_vector

t107.c : Vergleich der Berechnung des Zykelindex mit Dimino und
	der Routine zykelind_arb 

t108.c: routinen mit strong generator

t109.c: Pragacz file

t110.c: 1. Bsp barred permutation

t111.c: 2. Bsp barred permutation

t112.c: change of basis monomial --> schubert

t113.c: beispiel of alain 

t114.c: geaendertes beispiel

t115.c: beispiel new character

t116.c: entwurf a_charvalue

t117.c: test for all zykind

t118.c: abgabe entwurf weber

t119.c: P-Q Schur functions

t120.c: remmelmult

t121.c: P-Q table

t122.c: P-Q table lascoux version

t123.c: Euler Phi mit factorization

t124.c: test auf strict bei partitionen

t125.c: berechnung der young polynome und test auf richtige werte

t126.c: berechnung der character polynome und test auf richtige werte

t127.c: charakterpolynome als schubert polynome

t128.c: automatischer texausdruck von charakterpolynomen 

t129.c: basiswechsel charpol --> monom

t130.c: basiswechsel charpol --> monom   ganze tafel fuer alle gewichte

t131.c: bigchar, bigyoung

t132.c: example lascoux   ALain kann nich kuerzen !!

t133.c: hecke Algebra Beispiel

t134.c: Alain example

t135.c: test of t_vec_vec_poly

t136.c: test fuer alternierende gruppe mit nc-interface

t137.c: multiplikation von monomial symmetric functions

t138.c: berechnung eines tableau zu inhalt umriss (alg)

t139.c: test fuer sym functionen

t140.c: stembridge : Eulerian numbers ...Disc Math 99 p. 314

t141.c: zykelind_arb Fripertinger t141.org

t142.c: test-environment

t143.c: fehler von petra_mueller eingabe oh.dat

t144.c: dimino fuer ueberlagerungsgruppe input t144.1 t144.2 ...

t145.c: ralf dixonwilf eingabe oktaeder

t146.c: t_POWSYM_ELMSYM

t147.c: uli eidt version der endlichen koerper: doco t147.doc

t148.c: Pragacz

t149.c: lascoux 24.4.92

t150.c: lascoux 24.4.92

t151.c: lascoux 250892

t152.c: lascoux 6-92

t153.c: lascoux 11-92  t153.doc  improved Axel 251192

t154.c: bad shape

t155.c: bad shape still not working

t156.c: first version  badshape , stil problems

t157.c: version bad shape 180193 still problems

t158.c: problem alain geloest

t159.c: christine

t160.c: power series

t161.c: beispiel reihen

t162.c: test fuer reihen

t163.c: ff bsp Dirk Lattermann

t165.c: al 100393 2. Teil

t166.c: al 190393 idempotente schubert

t167.c: tafel und basiswechsel charpol-monomial

t168.c: automatische lagrange

t169.c: projektive Darstellung 1

t170.c: projektive Darstellung 2

t171.c: operate_perm_tableaux

t172.c: charvalue mit charpartition, zeitvergleich

t173.c: fehler bei kostka_tab_skew, geloest

t174.c: beispiel von alain

t175.c: first_tableaux

t176.c: vminus_hecke

t177.c: vertikal_sum

t178.c: numberof_shufflepermutation

t179.c: garnir

t180.c: wybourne hecke

t181.c: betten untergruppen (erste version)

t182.c: zykelindex test mit s8

t183.c square of vandermond

t184.c: special variables in elmsym

t185.c: test routinen

t186.c: eval_cons_polynom

t187.c: first version of Muzychuk

t188.c: second version of Muzychuk

t189.c: reihe routine

t190.c: zweites Beispiel Reihe

t191.c: test fuer weintrauben welche symmetric sind

t192.c: outerproductschur mit limit

t193.c: beispiel square vandermonde von thomas
	noetig einf2, einf3, ..

t194.c: beispiel fuer sscan

t195.c: beispiel fuer brauer character

t196.c: alain example

t197.c: test prsym von Barop

t198.c: test for finite field order / next

t199.c: test for finite filed / mult

t200.c: zerlegungsmatrix decp_mat

t201.c: vergleich von reduzierten zerlegungen von permutationen und 
	inversen permutationen. Verglichen werden die laengen der 
	ansteigenden teilfolgen

t202.c: berechnung modularer dimension

t203.c: berechnung determinante von HOMSYM

t204.c: schnittmatrix nach FF, dann rank, vergleich mit dimension_mod

t205.c: weintraube / kontertableau zu permutation

t206.c: alain permutations unterhalb in der bruhat ordnung

t207.c: brenti kshdan lustig

t208.c: problem von dirk lattermann

t209.c:	problem christine barop

t210.c: fripertinger

t211.c: best case quicksort wahrscheinlichkeit und anzahl best cases

t212.c: check for t_POLYNOM_ELMSYM

t213.c: double schubert

t214.c: double schubert sepcialisieren in perm of 2 alpabet

t215.c: rectrice

t216.c: bruhat comp

t217.c: gauss polynom

t218.c: colex sorting with insert into lists


t220.c: yamanouchi

t221.c: schubert box

t222.c: test fuer eval polynom

t223.c: scalarproduct schubert

t224.c: new invers matrix

t225.c: chartafel ohne ausgabe

t226.c: binary gcd

t227.c: extended ggt

t228.c: binaermodell chartafel

t229.c: rectrice

t230.c: test t_LIST_POLYNO M

t231.c: alain problem

t232.c: dimensionvergleich mod/gewoehnlich

t233.c: beispiel langzahl in polynom

t234.c: beispiel zur p-hook-diagramm

t235.c: problem langzahl polynom

t236.c: lascoux max/min B_n

t237.c: eigene schnitt matrix berechnung wg. fehler in dim_mod

t238.c: beispiel mit p_hook_diagramm

t239.c: eigene modulare dimension  nur mit alpha

t240.c: random_bv

t241.c:	fastspin

t242.c: bespiel lascoux fuer spin charaktere

t243.c: test objectread/write bv

t244.c: test m_vector_ff / m_ff_vector

t246.c: test composiotn

t247.c: test next bar

t248.c: test cyclic chartafel

t249.c: bespiel fuer symmetric move down bei wt

t250.c: aufwand heap sort - heap erstellen

t251.c: double schubert beispiele

t253.c: barred perm schubert pragacz

t254.c: test LAURENT

t255.c: test BRUCH of polynomials, invers matrix of polynom matriox
	using adjonit and determinant

t256.c: test sup/inf bitvector

t257.c: test rectrice

t258.c: rectrice bar

t259.c: bsp carre

t260.c: richtiges rectr

t261.c: reverse rectrice

t262.c: test english tableau

t263.c: differential operator fuer sym fkt

t264.c: Schensted

t265.c: test pletysm

t266.c: test strict_to_odd_part

t267.c: test schnitt_schur

t268.c: quine mc cluskey

t269.c: test hecke trevor ex1.c

t270.c: rz polynom

t271.c: dimension_mod

t272.c: loop over all permutations

t273.c: random_bar
t274.c: random_permutation
t275.c: schnittmatrix Anzahl Nullen

t276.c: 
t277.c
t278.c

t279.c: new alg wt

t280.c: new alg wt
t281.c: 
t282.c: new alg wt

t283.c: vergleich schnittmat und grammat

t284.c: rank mit john methode

t285.c: noch was zu john

t286.c: bit rank

t287.c: bit rank von own schnitt

t288.c: alain odg

t289.c: rank von schnitt

t290.c: tabloide der schnittmatrix

t291.c: dim mod und immaneneten

t292.c: dim mod mot bit ohne zwischenmatrix

t293.c: test von zyk.c
t294.c: test von vc.c

t295.c: dim mod mot bit ohne zwischenmatrix anzahl nullen

t296.c test fehler in m_i_pa

t297.c: version bit rank

t298.c:

t299.c: test aenderung christoph carre  gcd
t300.c: test aenderung christoph carre  gcd
t301.c: test aenderung christoph carre  gcd
t302.c: test aenderung christoph carre  gcd
t303.c: test aenderung christoph carre  gcd


t304.c: test aenderung christoph carre laurent
t305.c: test aenderung christoph carre laurent

t306.c: neues dimmod mit einfuegen in vektorraum

t307.c: test aenderung christoph carre laurent
t308.c: test aenderung christoph carre laurent /* problems */

t309.c: test christoph plet 1

t310.c: double schubert eingabe lehmercode

t311.c: dimmod mit packed und einfuegen

t312.c: unrank subset 
t313.c: dimmod mit neuem rankfunktion ==> 32 bit bei 1347
t314.c: dimmod mit neuem rankfunktion ==> 32 bit bei 1347 noch schneller
t315.c: result speichern testen bei makevectoroftableaux

t316.c: dimmod mit mehreren files fuer tabloids
t317.c: double wt ausgabe als tex-matrix falsch!

t318.c: double wt mit rahmen
t319.c: haegar bsp

t320.c: bsp specht_dg

t321.c: doppel wt funktioniert!

t322.c: vergleich der tableaux bei wt-diss und double-wt

t323.c: test.c vom 14.11.96 

t324.c: sscan SCHUR

t325.c: ex1.c hiccup

t326.c: ex2.c hiccup

t327.c: hecke_dg

t328.c: plethysm

t329.c: invers_bar, sscan_bar

t330.c: reorder_hall

t331.c: euler_phi

t332.c: elementary_schur_plet

t333.c: schur_schur_plet / length limit

t334.c: schubert polynome mittels compatibler folgen

t335.c: vergleich compatible gegen schubert

t336.c: zu einer weintraube wird eine reduzierte zerlegung berechnet, dann wird getestet
        ob alle wt unterhalb zur gleichen permutation gehoeren.

t337.c: malen von verband der wt/2wt

t338.c: verschiedene wt - versionen

t339.c: testen von INTEGER/LONGINT

t340.c: test von mult power x schur

t341.c: zeitvergleich chartafel_bit / chartafel_nonbit

t342.c: abbildung list->zykel als bahn in sn

t343.c: verschiedene ordnungen bruhat stark/schwach/ lehmer containment

t344.c: whitney zahlen fuer young verband zu partitionen

t345.c: whitney zahlen fuer young verband zu partitionen und skewpartitions

t346.c: berechnung unimodaler folgen

t347.c: berechnung unimodaler folgen

t348.c: forgotten symmetric function

t349.c: anzahl 0-1 matrizen

t350.c: subset loop

t351.c: anzahl 0-1 matrizen gute version
t352.c: anzahl 0-1 matrizen gute version

t353.c: anzahl 0-1 matrizen noch besser 2x bintree

t354.c: anzahl 0-1 matrizen besser mit speicher fuer my_binom

t355.c: 0-1 mittels newtrans, basiswechsel

t356.c: erzeugen der 0-1 matrizen

t356.c: erzeugen der 0-1 matrizen + bijectives tablueax paar

t357.c: erzeugen der 0-1 matrizen automorphismen gruppe thomas Gruener

t358.c: anzahl 0-1 matrizen mit number_01_matrices

t359.c: erzeugen, automorphismengruppe, aufhoeren wenn all

t360.c: knuth 0-1 bijection vor und zureuck

t361.c: 0-1 isomorphe matrizen mittels knuth aus tableaux paaren

t362.c: 0-1 isomorphe mittels operation auf wt, nicht so gut

t363.c: 0-1 mittels speicher und teilen in der mitte

t364.c: anzahl matrizen natuerliche zahlen

t365.c: 0-1 mittels speicher und spaltenweise

t366.c: test der hashtabelle

t367.c: 0-1 mittels speicher spaltenweise, hash

t368.c: 0-1 mittels hash, globaler file

t369.c: erzeugende funktion fuer young verband, meine und ueno

t370.c: m_lehmer_schubert_qpolynom

t371.c: 0-1 hash globaler file 9.12.97

t372.c: q_gauss

t373.c: chartafel 

t375.c: pp --> parts

t376.c: basis wechsel sym func

t377.c: vergleich zweier basiswechsel sym func 

t378.c: berechnungen zu stanley: number of reduced decompositions F und Q polynom

t379.c: moebius

t380.c: stanley F Q

t381.c: beispiel fuer joellenbeck = gral element = summe ueber all STY

t382.c: rank generating young poset, for factoring with maple

t383.c: summe ueber dimension_schubert

t384.c: mif format fuer polynom

t385.c: test ob vex schubert = determinante

t386.c: unimodal gauss/arb partition

t387.c: T_I als q_polynom fuer unimodal

t388.c: unimodalitaets untersuchungen an gauss polynom

t389.c: ordnung beliebiger gruppe bsp: s8 als drehen auf dem wuerfel

t390.c: unimodalitaetstest mit 0-1 matrix  eintrag 1 falls differenz unimodal

t391.c: row column matrices

t392.c: testpart

t393.c: test fuer mod dim mit duenner matrix

t394.c: schnellere version von t393.c

t395.c: perm matrix

t396.c: zerlegungszahlen, schneller mit duenn, rank duenn ohne 
		symmetrica, speichern  der schnittmatrix

t397.c: datenbank mit unimod sequences, nur mit gdbm nicht mit ndbm
        laeuft auf der btm2xm in /scratch/axel/

t398.c: versuch zum bruhat ideal. idee war mittels speziellen weintrauben
        operation die rank generating function zu bekommen
        geht nicht z.B. Y_02010
	operation war        o
			     oo 
			     --

		o		o
		-o		o
		o		-o

				o
		oo		-
		o		oo


			-
			o
			oo

	um die coxeter relationen zu simulieren

t399.c: statistik nach anzahl der ebenen bei den weintrauben,
        eingabe der grad der permutation, ausgab die Anzahl der perm, deren
        schubert polynom die entsprechende anzahl der ebenen hat.

t400.c: statistik nach ebenen, aufgeschluesselt nach partitions paaren

t403.c: 

t404.c: 

t405.c:

t406.c: anzahl 01 matrizen

t407.c: anzahl grassmannian permutations

t408.c: anzahl grassmannian,vexillary permutations 

t409.c: anzahl grassman nach position decrease

t410.c: newtrans mit breath first

t411.c: newtrans

t412.c: ranked essential set

t413.c: klassen multiplikation

t414.c: klassen multiplikation mit c_ijk

t415.c: covering number sn

t416.c: newtrans mit gegebener zahl von inversionen und geg grad

t417.c: classmult c_lambda^k bis volle gruppe, ausgabe der neuen klassen

t418.c: anzahl der fixpunkte als charakter zerlegen

t419.c: group reduction function testen

t420.c: sscan testen

t421.c: determinant von chartafel, an_tafel

t422.c: rank of a mtrix

t423.c: sdg

t424.c: bad shape darstellung brechnung der dimension

t425.c: charakteristik Specht paper

t426.c: neue variante fuer dimmod

t427.c: neue weniger platz dimmod nur fuer mod 2

t428.c: zum berechnen des p-defects

t429.c: dimmod

t430.c: test von order eines group elements und order einer bdg

t431.c: bdg erzeugen des invarianten unterraums

t432.c: dimmod versuch 1347 auf x4

t433.c: invariante unterraueme suchen

t434.c: dimmmod

t435.c: dimmod andere rank_bit  - not working

t436.c: test m_umriss_tableaux

t437.c: fuer foulkes conjecture, differenz

t438.c: dnk fuer laue mittels cap 

t439.c: eigne berechnung plethsym

t440.c: eigner algorithmus plethysm

t441.c:  eigner algorithmus plethysm

t442.c: PSL2_23

t443.c: test von tdelete mittels multiplication von monomial symmetric functions

t444.c: html output von kostka tafel

t445.c: foulkes vergleich
t446.c: foulkes vergleich einzelne partition

t448.c: foulkes monomial symmetric leading terms zu gegebenen rechteck
t449.c: foulkes monomial symmetric leading terms zu gegebener partitionsumriss
t450.c: foulkes monomial symmetric leading terms zu gegebener partitionsumriss und gegebenen inhalt (abfallend)
t451.c: dimmod mit threads

t452.c: dominance for news

t453.c: test auf fehler in james/kerber aber stembridge verwechselt die reihenfolge

t454.c: square free part
